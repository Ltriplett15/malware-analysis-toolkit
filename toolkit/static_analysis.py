import os
import yara
import subprocess

def unpack_malware(malware_path, unpacked_dir="/tmp/unpacked"):
    """
    Unpack a malware sample using an external unpacker (e.g., UPX).
    """
    if not os.path.exists(unpacked_dir):
        os.makedirs(unpacked_dir)
    
    # Example using UPX unpacker
    try:
        result = subprocess.run(["upx", "-d", malware_path, "-o", unpacked_dir], check=True)
        print(f"[INFO] Malware unpacked to {unpacked_dir}")
    except subprocess.CalledProcessError as e:
        print(f"[ERROR] Failed to unpack malware: {e}")


# Function to perform YARA scanning
def yara_scan(file_path, rule_file="yara_rules.yar"):
    print(f"[INFO] Scanning {file_path} with YARA...")
    try:
        rules = yara.compile(filepath=rule_file)
        matches = rules.match(file_path)
        return matches
    except Exception as e:
        print(f"[ERROR] Failed to scan {file_path} with YARA: {e}")
        return []

# Main static analysis function
def perform_static_analysis(file_path):
    print(f"[INFO] Performing static analysis on {file_path}")
    yara_results = yara_scan(file_path)
    if yara_results:
        print(f"[ALERT] YARA matches found: {yara_results}")
    else:
        print(f"[INFO] No YARA matches found.")

if __name__ == "__main__":
    malware_path = input("Enter the path to the malware binary: ")
    unpack_malware(malware_path)
    perform_static_analysis(malware_path)
